{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amany\\\\2.ITI\\\\NodeJS\\\\Repository\\\\Good-Reads-Application\\\\admin-part\\\\src\\\\Components\\\\addCategoryModal.js\",\n    _s = $RefreshSig$();\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCategoryModal(probs) {\n  _s();\n\n  //initial values for formik\n  const initialValues = {\n    Name: ''\n  }; //to handle the submit action with formik\n\n  const onSubmit = values => {\n    console.log(values);\n    probs.onClick();\n  }; //to handle the validations on the inputs with formik\n\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.Name) {\n      errors.Name = '*Required .. Please Enter Category Name';\n    }\n\n    return errors;\n  }; // creating the formik object\n\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: probs.state,\n      onHide: probs.onClick,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"px-4\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"ms-auto\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3\",\n            controlId: \"categoryName\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 9,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"Name\" // value={input.Name}\n                ,\n                value: formik.values.Name,\n                autoComplete: \"off\" // onChange={handleChange}\n                ,\n                onChange: formik.handleChange,\n                placeholder: \"Enter the Category Name\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), formik.errors.Name ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: formik.errors.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 46\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-dark\" // onClick={handleClick} \n              ,\n              type: \"submit \",\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCategoryModal, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddCategoryModal;\nexport default AddCategoryModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategoryModal\");","map":{"version":3,"names":["Modal","Button","Form","Row","Col","useFormik","AddCategoryModal","probs","initialValues","Name","onSubmit","values","console","log","onClick","validate","errors","formik","state","handleSubmit","handleChange"],"sources":["D:/Amany/2.ITI/NodeJS/Repository/Good-Reads-Application/admin-part/src/Components/addCategoryModal.js"],"sourcesContent":["import Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useFormik } from 'formik';\r\n\r\nfunction AddCategoryModal(probs){\r\n\r\n  //initial values for formik\r\n  const initialValues={\r\n    Name:''\r\n  }\r\n\r\n  //to handle the submit action with formik\r\n  const onSubmit=values=>{\r\n    console.log(values);\r\n    probs.onClick();\r\n  }\r\n\r\n  //to handle the validations on the inputs with formik\r\n  const validate=values=>{\r\n    let errors={};\r\n    if(!values.Name){\r\n      errors.Name= '*Required .. Please Enter Category Name';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  // creating the formik object\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={probs.state} onHide={probs.onClick} size=\"lg\">\r\n        <Modal.Header className=\"px-4\" closeButton>\r\n          <Modal.Title className=\"ms-auto\">Add Category</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"categoryName\">\r\n                <Col sm={3}>\r\n                    <Form.Label>Category Name</Form.Label>\r\n                </Col>\r\n                <Col sm={9}>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name='Name'\r\n                        // value={input.Name}\r\n                        value={formik.values.Name}\r\n                        autoComplete=\"off\"\r\n                        // onChange={handleChange}\r\n                        onChange={formik.handleChange}\r\n                        placeholder=\"Enter the Category Name\"\r\n                        autoFocus/>\r\n                        {formik.errors.Name?(<span className='error'>{formik.errors.Name}</span>)\r\n                        :null}\r\n                </Col>\r\n            </Form.Group>\r\n            <div className='text-center'>\r\n              <Button variant=\"outline-dark\" \r\n              // onClick={handleClick} \r\n              type=\"submit \">\r\n                Add Category\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCategoryModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}